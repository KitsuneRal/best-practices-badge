# WARNING. THIS FILE WAS AUTO-GENERATED BY THE TRANSLATION GEM.
# IF YOU UPDATE IT, YOUR CHANGES WILL BE LOST AT THE NEXT SYNC.
#
# To update this file, use this translation interface:
# http://translation.io/david-a-wheeler/cii-best-practices-badge/ru
#
---
ru:
  helpers:
    select:
      prompt: 'Выберите: '
    submit:
      create: Создать %{model}
      update: Сохранить %{model}
      submit: Сохранить %{model}
  ransack:
    search:
    predicate:
    and:
    or:
    any:
    all:
    combinator:
    attribute:
    value:
    condition:
    sort:
    asc:
    desc:
    predicates:
      eq:
      eq_any:
      eq_all:
      not_eq:
      not_eq_any:
      not_eq_all:
      matches:
      matches_any:
      matches_all:
      does_not_match:
      does_not_match_any:
      does_not_match_all:
      lt:
      lt_any:
      lt_all:
      lteq:
      lteq_any:
      lteq_all:
      gt:
      gt_any:
      gt_all:
      gteq:
      gteq_any:
      gteq_all:
      in:
      in_any:
      in_all:
      not_in:
      not_in_any:
      not_in_all:
      cont:
      cont_any:
      cont_all:
      not_cont:
      not_cont_any:
      not_cont_all:
      start:
      start_any:
      start_all:
      not_start:
      not_start_any:
      not_start_all:
      end:
      end_any:
      end_all:
      not_end:
      not_end_any:
      not_end_all:
      'true':
      'false':
      present:
      blank:
      'null':
      not_null:
  simple_form:
    'yes':
    'no':
    required:
      text:
      mark:
    error_notification:
      default_message:
  hello:
  submit:
  comma_separated_list:
  begin_with_cpe:
  not_an_email:
  known_bad_password:
  valid_text:
  url_message:
  projects_count:
    one:
    other:
  feed_title:
  project_name_unknown:
  locale_name:
    en:
    de:
    fr:
    ja:
    ru:
    zh-CN:
  layouts:
    cii_best_practices:
    projects:
    users:
    account:
    profile:
    settings:
    logout_html:
    signup_html:
    login_html:
    footer_text_html:
  admin_only: Только администратор.
  account_activations:
    activated: Учётная запись активирована!
    failed_activation: Недействительная ссылка активации
  password_resets:
    forgot_password:
    reset_password:
    password_confirmation:
    email_not_found:
    password_empty:
    password_reset:
    instructions_sent:
    cant_reset_nonlocal:
    reset_expired:
    update_password:
  sessions:
    login_header:
    login_with_github_html:
    or:
    email:
    password:
    forgot_password:
    remember_me:
    login_custom:
    no_custom:
    already_logged_in:
    incorrect_login_info:
    invalid_combo:
    signed_in:
    not_activated:
    signed_out:
  static_pages:
    home:
      badge_program:
      get_your_badge:
      p1_html:
      p2_html:
      p3_html:
    criteria:
      criteria:
      detailed_criteria_on_github:
      current_criteria:
      criteria_must_should_suggested:
      criteria_na_met_details:
      project_counts:
      project_stats_html:
  users:
    new:
      signup_header:
      intro_html:
      name:
      email:
      preferred_locale:
      password:
      password_confirmation:
      create_account:
    edit:
      update_user_info:
      save_changes:
    update:
      profile_updated:
    show:
      edit_user:
      other_projects_edit:
      see_external:
      as_admin:
      send_email_to:
      delete_link_name:
      confirm_delete:
    destroy:
      cannot_delete_self:
      user_deleted:
    redirect_existing:
    new_activation_link_created:
    please_log_in:
  project_stats:
    index:
      project_stats_header:
      all_projects:
      projects_nontrivial:
      projects_activity_30:
      daily_activity:
      reminders:
      active_projects:
      active_in_progress:
      active_edited:
      active_edited_in_progress:
      projects_created_since_yesterday:
      projects_updated_since_yesterday:
      projects_created_average_7_days:
      projects_updated_average_7_days:
      reminders_sent_since_yesterday:
      reactivated_projects:
      admin_html:
      raw_data:
      json_format:
      csv_format:
      projects_created_updated_daily:
  projects:
    index:
      all:
      passing_100:
      in_progress_variable:
      add_link:
      add_new:
      badge_status:
      exclude_passing:
      text_search:
      name_or_description:
      search:
    table:
      id:
      name:
      description:
      website:
      license:
      owner:
      last_achieved:
      pachieved:
      can_also_sort:
      repository_url:
      create_time:
      update_time:
      user_id:
      paren_name_unknown:
      badge_level:
    new:
      thanks_adding:
      post_delay_warning:
      new_badge:
      may_select_html:
      select_one_github:
      submit_github:
      project_already_exists:
      url_of_homepage:
      placeholder_of_homepage:
      url_of_repo:
      placeholder_of_repo:
      submit_urls:
      final_text_html:
      sign_in_first:
      new_badge_or:
      original_repos:
      fork_repos:
    edit:
      repo_url_limits:
      changed_since_html:
      successfully_updated:
      congrats_new:
      lost_badge:
      static_analysis_updated_html:
      save_and_continue:
      submit_and_exit:
      submit_cc_by_3plus_html:
      edit_status:
    show:
      edit:
      delete:
      confirm_delete:
      back:
      owned_by:
      created_at_html:
      updated_at_html:
      last_lost_html:
      last_achieved_html:
      cc_by_3plus_html:
      cc_by_3only_html:
    form_early:
      badge_intro:
        description:
        details_html:
      level:
        0_html:
        1_html:
        2_html:
      got_badge:
        description_1:
        badge_alt:
        description_2:
        details_html:
        editing_description_html:
    form_basics:
      project_name:
        description:
        details:
        placeholder:
      description:
        description:
        details:
        placeholder:
      homepage_url:
        description:
        placeholder:
      repo_url:
        description:
        placeholder:
      implementation_languages:
        description:
        details:
        placeholder:
      cpe:
        description_html:
        details_html:
        placeholder:
      license:
        description_html:
        details_html:
        placeholder:
    misc:
      in_javascript:
        collapse_all_title:
        collapse_all:
        expand_all_title:
        expand_all:
        show_details:
        hide_details:
        show_all_details:
        hide_all_details:
        show_met_title:
        show_met_html:
        hide_met_title:
        hide_met_html:
        passing_alt:
        barely_alt:
        failing_alt:
        unknown_alt:
        met_url_placeholder:
        met_justification_placeholder:
        met_placeholder:
        unmet_placeholder:
        na_justification_placeholder:
        na_placeholder:
        unknown_placeholder:
      disabled_reminders:
      general_comments:
        description:
        placeholder:
      some_not_crypto_html:
      dont_use_crypto:
      future_header_html:
      toggle_details_title:
      details:
      url_required:
      future_criterion:
      url_required_warning:
      justification_required_warning:
    delete:
      done:
  report_mailer:
    subject_achieved_passing:
    subject_no_longer_passing:
    subject_new_project:
    subject_reminder:
    subject_project_deleted:
    new_project_heading:
    new_project_part1:
    new_project_part2:
    new_project_part3_html:
    new_project_part3_text:
    gained_level_part1:
    gained_level_part2:
    gained_level_part3:
    in_markdown_add:
    in_html_add:
    lost_level_message:
    ending:
  user_mailer:
    account_activation:
      before_html:
      before_text:
      activate:
      subject:
    github_welcome:
      before_html:
      before_text:
      subject:
    user_update:
      before_text:
      username_changed:
      email_changed:
      password_changed:
      locale_changed:
      current_state:
      after_text:
      subject:
    password_reset:
      before_html:
      before_text:
      after_html:
      after_text:
      subject:
      reset_password:
  criteria:
    '0':
      description_good:
        description: Веб-сайт проекта ОБЯЗАН кратко описывать, что делает программное
          обеспечение (какую проблему решает?).
        details: Описание ОБЯЗАНО быть на языке, который могут понять потенциальные
          пользователи (например, с минимумом жаргона).
        met_placeholder: "(Необязательно) Где находится краткое описание? Возможно,
          стоит указать URL."
      interact:
        description: 'Веб-сайт проекта ОБЯЗАН предоставлять информацию о том, как:
          получать и предоставлять обратную связь (например, отчеты об ошибках или
          улучшения) и вносить свой вклад в программное обеспечение.

'
        met_placeholder: "(Необязательно) Где находится краткое описание? Возможно,
          стоит указать URL."
      contribution:
        description: 'Информация о том, как внести вклад, ДОЛЖНА объяснить процесс
          внесения вклада (например, используются ли pull request''ы).

'
        details: Мы предполагаем, что <a href="https://guides.github.com/activities/contributing-to-open-source/">проекты
          на GitHub используют issues и pull requests</a>, если не указано иное. Эта
          информация может быть короткой, например, ограничиваясь лишь указанием,
          что проект использует pull requests, issue tracker или сообщения в список
          рассылки (какой?).
        met_placeholder: "(Требуется URL) Каков процесс? По какому URL можно найти
          его объяснение?"
      contribution_requirements:
        description: Информация о том, как внести вклад, ДОЛЖНА включать требования
          к приемлемым взносам (например, ссылку на любой требуемый стандарт кодирования).
        unmet_placeholder: Почему требования настолько очевидны, что эта информация
          не нужна?
      floss_license:
        description: ПО, создаваемое проектом, ОБЯЗАНО быть выпущено под свободной
          (FLOSS) лицензией.
        details: 'Свободное ПО (далее СПО) - это программное обеспечение, которое
          соответствует <a href="https://ru.wikipedia.org/wiki/%D0%9E%D0%BF%D1%80%D0%B5%D0%B4%D0%B5%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5_Open_Source">Определению
          Открытого ПО</a> (<a href="https://opensource.org/osd-annotated">официальный
          текст на англ.</a>) или <a href="https://www.gnu.org/philosophy/free-sw.ru.html">Определению
          Свободного Программного Обеспечения</a>. Примеры таких лицензий включают
          <a href="http://creativecommons.org/publicdomain/zero/1.0/">CC0</a>, <a
          href="https://opensource.org/licenses/MIT">MIT</a>, <a href="https://opensource.org/licenses/BSD-2-Clause">BSD
          2-Clause</a>, <a href="https://opensource.org/License/BSD-3-Clause">BSD
          3-Clause</a>, <a href="https://opensource.org/licenses/Apache-2.0">Apache
          2.0</a>, <a href="https://opensource.org/licenses/lgpl-license">Меньшая
          стандартная общественная лицензия GNU (LGPL)</a> и <a href="https://opensource.org/licenses/gpl-license">Стандартная
          общественная лицензия GNU (GPL)</a>. Для наших целей это означает, что лицензия
          ОБЯЗАНА быть: <ul> <li><a href="https://opensource.org/licenses">одобренной
          Open Source Initiative (OSI)</a>, или</ li> <li><a href="https://www.gnu.org/licenses/license-list.html">свободной
          лицензией, одобренной Фондом Свободного Программного Обеспечения (FSF)</a>,
          или</li> <li><a href="https://www.debian.org/legal/licenses/">свободной
          лицензией, приемлемой для ветки main проекта Debian</a>, или</li> <li><a
          href="https://fedoraproject.org/wiki/Licensing:Main?rd=Licensing">«хорошей»
          лицензией в понимании Fedora</a>.</li> </ul> ПО МОЖЕТ одновременно лицензироваться
          на других условиях (например, приемлема комбинация «GPLv2 или закрытая лицензия»).

'
      floss_license_osi:
        description: 'РЕКОМЕНДУЕТСЯ, чтобы все варианты лицензий для ПО, создаваемого
          проектом, были <a href="https://opensource.org/licenses">одобрены Open Source
          Initiative (OSI).</a>

'
        details: 'Для одобрения OSI используется строгий процесс, чтобы определить,
          какие лицензии соответствуют Открытому ПО.

'
      license_location:
        description: 'Проект ОБЯЗАН публиковать лицензию или лицензии своих результатов
          в стандартном расположении в своем репозитории исходного кода.

'
        details: 'Например, в качестве файла верхнего уровня с именем LICENSE или
          COPYING. Имена файлов лицензии МОГУТ сопровождаться расширением, таким как
          «.txt» или «.md».

'
      documentation_basics:
        description: Проект ДОЛЖЕН предоставить базовую документацию для программного
          обеспечения, создаваемого проектом.
        details: 'Эта документация должна быть в некоторых формах (таких как текст
          или видео), включая в себя: как установить программное обеспечение, как
          его запустить, как его использовать (возможно, с помощью учебника с примерами)
          и как использовать его безопасно (например, что делать и чего не делать),
          если эти темы применимы для данного программного обеспечения. Документация
          по безопасности не обязательно должна быть длинной. Проект МОЖЕТ использовать
          гипертекстовые ссылки для не-проектных материалов в качестве документации.
          Если проект не создает программное обеспечение, выберите «неприменимо» (N/A).

'
        met_placeholder: "(Необязательно) Какие URL-адреса являются отправными точками
          для документации?"
      documentation_interface:
        description: Проект ОБЯЗАН предоставить справочную документацию, описывающую
          внешний интерфейс (как входной, так и выходной) программного обеспечения,
          создаваемого проектом.
        details: 'Документация внешнего интерфейса объясняет конечному пользователю
          или разработчику, как его использовать. Это может включать в себя интерфейс
          прикладного программирования (API), если программное обеспечение его имеет.
          Если это библиотека, документируйте основные классы/типы и методы/функции,
          которые можно вызвать. Если это веб-приложение, определите его URL-интерфейс
          (часто его интерфейс REST). Если это интерфейс командной строки, документируйте
          параметры и настройки, которые он поддерживает. Во многих случаях лучше
          всего, если большая часть этой документации будет автоматически сгенерирована,
          чтобы эта документация была синхронизирована с программным обеспечением
          по мере его изменения, но это не требуется. Проект МОЖЕТ использовать гипертекстовые
          ссылки для не-проектных материалов в качестве документации. Документация
          МОЖЕТ быть автоматически сгенерирована (там, где это применимо, это часто
          наилучший способ создания документации). Документация интерфейса REST может
          быть сгенерирована с использованием Swagger/OpenAPI. Документация по интерфейсу
          кода МОЖЕТ быть сгенерирована с использованием таких инструментов, как <a
          href="http://usejsdoc.org/">JSDoc</a> (JavaScript), <a href="https://esdoc.org/">ESDoc</a>
          (JavaScript), pydoc (Python) и Doxygen (многие языки). Просто иметь комментарии
          в коде реализации недостаточно для выполнения этого критерия; должен быть
          простой способ увидеть информацию без чтения всего исходного кода. Если
          проект не создает программное обеспечение, выберите «неприменимо» (N/A).

'
      sites_https:
        description:
        details:
      discussion:
        description: Проект ОБЯЗАН иметь один или несколько механизмов для обсуждения
          (включая предлагаемые изменения и проблемы), которые доступны для поиска,
          позволяют ссылаться на сообщения и темы по URL, позволяют новым людям участвовать
          в некоторых обсуждениях и не требуют установки на стороне клиента проприетарного
          программного обеспечения.
        details: Примерами приемлемых механизмов являются архивируемые списки рассылки,
          обсуждения в GitHub issues и pull requests, Bugzilla, Mantis и Trac. Асинхронные
          механизмы обсуждения (например, IRC) приемлемы, если они отвечают этим критериям;
          убедитесь, что есть механизм архивирования URL-адресов. Разрешено, хотя
          и не рекомендуется, использовать проприетарный JavaScript.
      english:
        description: 'Проект ДОЛЖЕН предоставлять документацию на английском языке
          и иметь возможность принимать отчеты об ошибках и комментарии о коде на
          английском языке.

'
        details: 'Английский в настоящее время является <a href="https://ru.wikipedia.org/wiki/%D0%9B%D0%B8%D0%BD%D0%B3%D0%B2%D0%B0_%D1%84%D1%80%D0%B0%D0%BD%D0%BA%D0%B0">лингва
          франка</a> компьютерной техники; Поддержка английского языка увеличивает
          число потенциальных разработчиков и рецензентов во всем мире. Проект может
          соответствовать этому критерию, даже если английский не является основным
          языком его ключевых разработчиков.

'
      repo_public:
        description:
        details:
      repo_track:
        description:
      repo_interim:
        description:
        details:
      repo_distributed:
        description:
        details:
      version_unique:
        description:
        details:
      version_semver:
        description:
        details:
      version_tags:
        description:
      release_notes:
        description:
        details:
      release_notes_vulns:
        description:
      report_process:
        description:
      report_tracker:
        description:
        unmet_placeholder:
      report_responses:
        description:
      enhancement_responses:
        description: 'Проект ДОЛЖЕН отвечать большинству (&gt;50%) запросов на улучшения
          в течение последних 2-12 месяцев (включительно).

'
        details: 'В качестве ответа МОЖЕТ быть «нет» или обсуждение выгод от данного
          улучшения. Цель состоит в том, чтобы по крайней мере на некоторые запросы
          был какой-то ответ, что указывает на то, что проект все еще жив. Для целей
          этого критерия не нужно учитывать поддельные запросы (например, от спамеров
          или автоматизированных систем). Если проект больше не принимает улучшения,
          выберите «неудовлетворенный» и укажите URL, проясняющий ситуацию для пользователей.
          Если проект большую часть времени перегружен количеством запросов на улучшения,
          выберите «не удовлетворяет» и объясните.

'
      report_archive:
        description:
      vulnerability_report_process:
        description:
        details:
      vulnerability_report_private:
        description:
        details:
      vulnerability_report_response:
        description:
        details:
      build:
        description: Если программное обеспечение, создаваемое проектом, требует сборки
          для использования, проект ДОЛЖЕН предоставить рабочую систему сборки, которая
          может автоматически пересобирать программное обеспечение из исходного кода.
        details: Система сборки определяет, какие действия необходимо предпринять
          для пересборки программного обеспечения (и в каком порядке), а затем выполняет
          эти действия. Например, она может вызывать компилятор для компиляции исходного
          кода. Если исполняемый файл создается из исходного кода, должна иметься
          возможность изменить исходный код проекта, а затем сгенерировать обновленный
          исполняемый файл с этими изменениями. Если программное обеспечение, создаваемое
          проектом, зависит от внешних библиотек, система сборки <em>не</em> обязана
          пересобирать эти внешние библиотеки. Если для использования программного
          обеспечения после изменения его исходного кода пересборка не требуется,
          выберите «неприменимо» (N/A).
      build_common_tools:
        description: 'РЕКОМЕНДУЕТСЯ использовать общеупотребительные инструменты для
          сборки программного обеспечения.

'
        details: Например, Maven, Ant, cmake, autotools, make или rake.
      build_floss_tools:
        description: Сборка проекта ДОЛЖНА использовать только инструменты со свободными
          (FLOSS) лицензиями.
      test:
        description:
        details:
      test_invocation:
        description:
        details:
      test_most:
        description:
      test_continuous_integration:
        description:
      test_policy:
        description:
        details:
      tests_are_added:
        description:
        details:
      tests_documented_added:
        description:
        details:
      warnings:
        description:
        details:
      warnings_fixed:
        description:
        details:
      warnings_strict:
        description:
        details:
      know_secure_design:
        description: 'Проект ОБЯЗАН иметь по крайней мере одного основного разработчика,
          знающего как проектировать безопасное программное обеспечение.

'
        details: 'Это требует понимания следующих принципов проектирования, в том
          числе 8 принципов из <a href="http://web.mit.edu/Saltzer/www/publications/protection/">Saltzer
          and Schroeder</a>: <ul> <li>экономичность механизма (поддерживать дизайн
          ПО как простым и компактным, так и практичным, например, с помощью массовых
          упрощений) <li>отказобезопасные значения по умолчанию (доступ по умолчанию
          должен быть запрещён, а установка проектов по умолчанию должна быть в защищённой
          конфигурации) <li>полное отграничение (любой доступ, который может быть
          ограничен, должен проверяться на достаточность прав доступа и не иметь обходных
          путей) <li>открытый дизайн (механизмы безопасности должны полагаться не
          на незнание их злоумышленником, а на более простым образом защищаемые и
          изменяемые  данные, типа ключей и паролей) <li>разделение привилегий (в
          идеале доступ к важным объектам должен зависеть от более чем одного условия,
          так чтобы взлом одной системы защиты не приводил к полному доступу; напр.,
          многофакторная аутентификация, такая как требование и пароля, и аппаратного
          токена, сильнее однофакторной) <li>минимальные привилегии (процессы должны
          работать с минимальными привилегиями, необходимыми для выполнения ими своих
          функций) <li>наименее общий механизм (дизайн должен минимизировать механизмы,
          общие для нескольких пользователей, и следовательно зависящие от всех этих
          пользователей, например, каталоги для временных файлов) <li>психологическая
          приемлемость (человеческий интерфейс должен быть спроектирован для удобства
          использования - может помочь разработка для «наименьшего удивления») <li>ограничение
          периметра атаки (периметр атаки - множество разных точек, в которых злоумышленник
          может попытаться ввести или извлечь данные - должен быть ограничен) <li>подтверждение
          ввода с помощью белых списков (входы обычно должны проверяться, на корректность
          до их принятия; эта проверка должна использовать белые списки (которые принимают
          только известные значения), а не черные списки (которые пытаются перечислить
          известные плохие значения)). </ul> «Основной разработчик» в проекте - это
          любой, кто знаком с базой кода проекта, без затруднений может вносить в
          него изменения и признан таковым большинством других участников проекта.
          Основной разработчик, как правило, неоднократно вносит вклад в течение последнего
          года (через код, документацию или ответы на вопросы). Разработчики обычно
          считаются основными разработчиками, если они инициируют проект (и не покинули
          проект более трех лет назад), имеют возможность получать информацию по закрытому
          каналу для отчетов об уязвимостях (если таковой имеется), могут принимать
          коммиты от имени проекта или делать финальные релизы программного обеспечения
          проекта. Если есть только один разработчик, этот человек является основным
          разработчиком.

'
      know_common_errors:
        description: 'По крайней мере, один из основных разработчиков проекта ОБЯЗАН
          знать об общих видах ошибок, которые приводят к уязвимостям в этом виде
          программного обеспечения, а также по крайней мере одному методу противодействия
          или смягчения каждого из них.

'
        details: 'Примеры (в зависимости от типа ПО) включают внедрение SQL-кода (injection),
          внедрение на уровне ОС, классическое переполнение буфера, межсайтовый скриптинг,
          отсутствие проверки подлинности и отсутствие авторизации. Обычно используемые
          списки уязвимостей можно найти в <a href="http://cwe.mitre.org/top25/">CWE/SANS
          top 25</a> или <a href="https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project">OWASP
          Top 10</a>.

'
      crypto_published:
        description: 'Программное обеспечение, созданное проектом, ОБЯЗАНО использовать
          по умолчанию только публикуемые криптографические протоколы и алгоритмы,
          которые анализируются экспертами (если используются криптографические протоколы
          и алгоритмы).

'
        details: 'Эти криптографические критерии не всегда применяются, поскольку
          некоторые программы не нуждаются в прямом использовании криптографических
          возможностей.

'
      crypto_call:
        description: Если программное обеспечение, создаваемое проектом, является
          приложением или библиотекой, и его основной целью является не внедрение
          криптографии, тогда для реализации криптографических функций оно ДОЛЖНО
          обращаться к программному обеспечению, специально предназначенному для этого;
          НЕ СЛЕДУЕТ повторно реализовывать свои собственные функции.
      crypto_floss:
        description: Вся функциональность программного обеспечения, создаваемого проектом,
          которая зависит от криптографии, ОБЯЗАНА быть реализована с использованием
          Свободного ПО.
        details: См. <a href="https://opensource.org/osr">Требования к открытым стандартам
          для программного обеспечения в рамках Open Source Initiative (на англ.)</a>.
      crypto_keylength:
        description: Механизмы безопасности в программном обеспечении, создаваемом
          проектом, ОБЯЗАНЫ использовать стандартные длины криптографических ключей,
          которые, по крайней мере, соответствуют минимальным требованиям NIST до
          2030 года (как указано в 2012 году). Программное обеспечение ОБЯЗАНО быть
          настраиваемо таким образом, чтобы уменьшенные длины ключей были полностью
          отключены.
        details: 'Эти минимальные длины в битах перечислены далее: симметричный ключ
          - 112, модуль факторизации - 2048, дискретный логарифмический ключ - 224,
          дискретная логарифмическая группа - 2048, эллиптическая кривая - 224 и хеш
          - 224 (хеширование пароля не покрывается этой длиной, больше информации
          о хешировании пароля можно найти в <a href="#crypto_password_storage">критерии
          crypto_password_storage</a>). См. <a href="http://www.keylength.com">http://www.keylength.com</a>
          для сравнения рекомендаций по длинам криптографических ключей от различных
          организаций. Программное обеспечение МОЖЕТ допускать меньшие длины ключей
          в некоторых конфигурациях (в идеале не должно, поскольку это позволяет атаки
          через понижение длины ключа, но иногда требуется более короткая длина ключа
          для обеспечения взаимодействия с другими системами).'
      crypto_working:
        description: Механизмы безопасности по умолчанию в программном обеспечении,
          создаваемом проектом, ЗАПРЕЩЕНО делать зависимыми от сломанных криптографических
          алгоритмов (например, MD4, MD5, single DES, RC4, Dual_EC_DRBG) или использовать
          режимы шифрования, которые не подходят для контекста (например, режим ECB
          почти никогда не подходит, потому что внутри зашифрованного ECB текста обнаруживаются
          идентичные блоки, как можно видеть на примере <a href="https://blog.filippo.io/the-ecb-penguin/">«пингвина
          ECB»</a>, а режим CTR часто неприемлем, поскольку не выполняет аутентификацию
          и приводит к дубликатам, если состояние ввода повторяется).
        details: Во многих случаях лучше всего выбирать режим алгоритма с блочным
          шифром, предназначенный для сочетания секретности и аутентификации, например,
          Galois / Counter Mode (GCM) и EAX. Проекты МОГУТ разрешать пользователям
          включать сломанные механизмы, где это необходимо для совместимости, но в
          таких случаях пользователи знают, что они это делают.
      crypto_weaknesses:
        description: Механизмы безопасности по умолчанию в программном обеспечении,
          создаваемом проектом, НЕ СЛЕДУЕТ делать зависимыми от криптографических
          алгоритмов или режимов с известными серьезными слабостями (например, криптографический
          алгоритм хеширования SHA-1 или режим CBC в SSH).
        details: 'Проблемы, связанные с режимом CBC в SSH, обсуждаются в <a href="https://www.kb.cert.org/vuls/id/958563">описании
          уязвимости CERT: SSH CBC</a>.'
      crypto_pfs:
        description: Механизмы безопасности в программном обеспечении, создаваемом
          проектом, ДОЛЖНЫ реализовать совершенную прямую секретность для протоколов
          соглашений о ключах, чтобы ключ сеанса, произведённый из набора долгосрочных
          ключей, не мог быть скомпрометирован, если один из долгосрочных ключей скомпрометирован
          в будущем.
      crypto_password_storage:
        description: Если программное обеспечение, создаваемое проектом, приводит
          к сохранению паролей для аутентификации внешних пользователей, пароли ОБЯЗАНЫ
          быть сохранены как итерированные хеши с солью для каждого пользователя с
          использованием алгоритма (итерированного) растяжения ключа (например, PBKDF2,
          Bcrypt или Scrypt).
        details: Этот критерий применяется только тогда, когда программное обеспечение
          требует проверки пользователей с использованием паролей, таких как серверные
          веб-приложения. Он не применяется в тех случаях, когда программное обеспечение
          хранит пароли для аутентификации в других системах (например, программное
          обеспечение реализует клиент для какой-либо другой системы), поскольку по
          крайней мере части этого программного обеспечения должны часто обращаться
          к нехешированному паролю.
      crypto_random:
        description: Механизмы безопасности в программном обеспечении, создаваемом
          проектом, ОБЯЗАНЫ генерировать все криптографические ключи и временные значения
          с использованием криптографически безопасного генератора случайных чисел;
          ЗАПРЕЩЕНО делать это с использованием генераторов, которые криптографически
          небезопасны.
        details: Криптографически безопасный генератор случайных чисел может быть
          аппаратным генератором случайных чисел или криптографически безопасным генератором
          псевдослучайных чисел (CSPRNG), использующим такие алгоритмы как Hash_DRBG,
          HMAC_DRBG, CTR_DRBG, Yarrow или Fortuna. Примеры вызовов <em>защищенных</em>
          генераторов случайных чисел включают java.security.SecureRandom в Java и
          window.crypto.getRandomValues в JavaScript. Примеры вызовов <em>небезопасных</em>
          генераторов случайных чисел включают java.util.Random в Java и Math.random
          в JavaScript.
      delivery_mitm:
        description: 'Проект ДОЛЖЕН использовать механизм доставки, устойчивый против
          атак посредника (MITM). Использование https или ssh + scp является приемлемым.

'
        details: 'Еще более сильным механизмом является выпуск программного обеспечения
          в виде пакетов, подписанных цифровой подписью, поскольку это смягчает атаки
          на систему распространения, но это работает только в том случае, если пользователи
          могут быть уверены, что открытые ключи для подписей верны <em>и</em> если
          пользователи действительно проверяют подпись.

'
      delivery_unsigned:
        description: ЗАПРЕЩЕНО получать криптографические контрольные суммы (например,
          sha1sum)  через HTTP и использовать их в роли криптографических подписей.
        details: Эти хеши могут быть изменены при передаче.
      vulnerabilities_fixed_60_days:
        description:
        details:
      vulnerabilities_critical_fixed:
        description:
      no_leaked_credentials:
        description: 'Публичным хранилищам ЗАПРЕЩЕНО допускать утечку действующих
          частных учетных данных (например, рабочий пароль или закрытый ключ), предназначенных
          для ограничения общего доступа.

'
        details: 'Проект МОЖЕТ пропускать «шаблонные» учетные данные для тестирования
          и несущественные базы данных, при условии что они не предназначены для ограничения
          общего доступа.

'
      static_analysis:
        description:
        details:
        na_placeholder:
        met_placeholder:
      static_analysis_common_vulnerabilities:
        description:
      static_analysis_fixed:
        description:
        details:
      static_analysis_often:
        description:
      dynamic_analysis:
        description: 'РЕКОМЕНДУЕТСЯ, чтобы к любой предлагаемой основной (major) версии
          программного обеспечения перед её выпуском применялся по крайней мере один
          инструмент динамического анализа.

'
        details: 'Инструмент динамического анализа проверяет программное обеспечение,
          выполняя его с конкретными входными данными. Например, проект МОЖЕТ использовать
          инструмент фаззинг-тестирования (например, <a href="http://lcamtuf.coredump.cx/afl/">American
          Fuzzy Lop</a>) или сканер веб-приложений (например, <a Href = "https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project">OWASP
          ZAP</a> или <a href="http://w3af.org/">w3af</a>). В некоторых случаях проект
          <a href="https://github.com/google/oss-fuzz#introduction">OSS-Fuzz</a> может
          быть готов применить фаззинг-тестирование к вашему проекту. Для целей этого
          критерия инструмент динамического анализа должен каким-то образом варьировать
          исходные данные, чтобы искать проблемы разного рода <em>или</em> быть автоматическим
          набором тестов с покрытием веток исполнения не менее 80%. Страница <a href="https://ru.wikipedia.org/wiki/%D0%94%D0%B8%D0%BD%D0%B0%D0%BC%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9_%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7_%D0%BA%D0%BE%D0%B4%D0%B0">Википедии
          о динамическом анализе</a> и <a href = "https://www.owasp.org/index.php
          / Fuzzing ">cтраница OWASP о фаззинг-тестировании</a> указывают некоторые
          инструменты динамического анализа. Использование инструмента/ов анализа
          МОЖЕТ, но не обязано быть сосредоточено на поиске уязвимостей в безопасности.

'
      dynamic_analysis_unsafe:
        description: 'РЕКОМЕНДУЕТСЯ регулярно использовать по меньшей мере один динамический
          инструмент (например, fuzzer или сканер веб-приложения) в сочетании с механизмом
          для обнаружения проблем безопасности памяти, таких как перезапись буфера,
          если программное обеспечение, создаваемое проектом, включает части, написанные
          на небезопасном языке (например, C или C++). Если проект не создает программное
          обеспечение, написанное на небезопасном языке, выберите «неприменимо» (N/A).

'
        details: 'Примерами механизмов обнаружения проблем безопасности памяти являются
          <a href="https://github.com/google/sanitizers/wiki/AddressSanitizer">Address
          Sanitizer (ASAN)</a> (доступен в GCC и LLVM), <a Href = "http://clang.llvm.org/docs/MemorySanitizer.html">Memory
          Sanitizer</a> и <a href="http://valgrind.org/">valgrind</a>. Другие потенциально
          используемые инструменты включают <a href="http://clang.llvm.org/docs/ThreadSanitizer.html">Thread
          Sanitizer</a> и <a href = "http://clang.llvm.org/ Docs / UndefinedBehaviorSanitizer.html
          ">Undefined Behavior Sanitizer</a>. Достаточно широкое использование утверждений
          (assertions) тоже может подходить.

'
      dynamic_analysis_enable_assertions:
        description: 'РЕКОМЕНДУЕТСЯ, чтобы программное обеспечение, создаваемое проектом,
          включало в себя достаточно много утверждений (assertions) времени выполнения,
          проверяемых при динамическом анализе.

'
      dynamic_analysis_fixed:
        description: 'Проект ОБЯЗАН своевременно исправлять все уязвимости средней
          и высокой степени серьёзности, обнаруженные при динамическом анализе кода,
          после их подтверждения.

'
        details: 'Уязвимость имеет среднюю либо высокую степень серьёзности, если
          ее базовая оценка по <a href="https://nvd.nist.gov/cvss.cfm">CVSS 2.0</a>
          равна 4. Если вы не используете динамический анализ кода и, следовательно,
          не обнаружили уязвимостей таким способом, выберите «неприменимо» (N/A).

'
      installation_common:
        description: 'Проект ДОЛЖЕН предоставлять возможность легко установить и удалить
          программное обеспечение, создаваемое проектом, с использованием общепринятых
          способов.

'
        details: 'Примеры включают использование менеджера пакетов (на уровне системы
          или языка), «make install / uninstall» (с поддержкой DESTDIR), контейнер
          в стандартном формате или образ виртуальной машины в стандартном формате.
          Процесс установки и удаления (например, его упаковка) МОЖЕТ быть реализован
          третьей стороной, при условии что он построен на Свободном ПО.

'
      build_reproducible:
        description: 'Проекту РЕКОМЕНДУЕТСЯ обеспечивать <a href="https://reproducible-builds.org/">
          воспроизводимую сборку </a>.

'
        details: 'Воспроизводимая сборка означает, что несколько сторон могут независимо
          повторить процесс генерации информации из исходных файлов и получить аналогичный
          результат с точностью до бита. Если сборка не требуется (например, в случае
          языков сценариев, где исходный код используется непосредственно вместо компиляции),
          выберите «N/A». В некоторых случаях воспроизводимости можно достичь путем
          принудительного выставления окружения. Разработчики JavaScript могут рассмотреть
          возможность использования npm shrinkwrap и webpack OccurenceOrderPlugin.
          Пользователи GCC и clang могут найти полезной опцию -frandom-seed. Среда
          сборки (включая набор инструментов) часто может быть определена для внешних
          сторон путём указания криптографической суммы (hash) для конкретного контейнера
          или виртуальной машины, которые они могут использовать для пересборки. <a
          href="https://reproducible-builds.org/docs/">В проекте reproducible-builds.org
          есть документация о том, как это сделать </a>.

'
      crypto_used_network:
        description: 'Программное обеспечение, созданное проектом, ДОЛЖНО поддерживать
          безопасные протоколы для всех своих сетевых коммуникаций, такие как SSHv2
          или новее, TLS1.2 или новее (HTTPS), IPsec, SFTP и SNMPv3. Небезопасные
          протоколы, такие как FTP, HTTP, telnet, SSLv3 или более ранние версии, и
          SSHv1 ДОЛЖНЫ быть отключены по умолчанию и разрешены только в том случае,
          если пользователь явным образом указывает это. Если программное обеспечение,
          созданное проектом, не поддерживает сетевые коммуникации, выберите «неприменимо»
          (N/A).

'
      crypto_tls12:
        description: 'Программное обеспечение, созданное проектом, ДОЛЖНО, если оно
          поддерживает или использует TLS, поддерживать как минимум версию TLS 1.2.
          Обратите внимание, что предшественник TLS называется SSL. Если программное
          обеспечение не использует TLS, выберите «неприменимо» (N/A).

'
      crypto_certificate_verification:
        description: Программное обеспечение, созданное проектом, ОБЯЗАНО, если оно
          поддерживает TLS, выполнять проверку сертификата TLS по умолчанию при использовании
          TLS, в том числе в подресурсах. Если программное обеспечение не использует
          TLS, выберите «неприменимо» (N/A).
        details: 'Обратите внимание, что неправильная проверка сертификата TLS является
          распространенной ошибкой. Для дальнейших сведений см. <a href="http://crypto.stanford.edu/~dabo/pubs/abstracts/ssl-client-bugs.html">«Самый
          опасный код в мире: проверка SSL-сертификатов в Non -Browser Software» Мартина
          Георгиева и др. (на англ.)</a> и <a href="https://blogs.gnome.org/mcatanzaro/2016/03/12/do-you-trust-this-application/">«Вы
          доверяете этому приложению?» Майклом Катанзаро (на англ.)</a>.'
      crypto_verification_private:
        description: Программное обеспечение, созданное проектом, ОБЯЗАНО, если оно
          поддерживает TLS, выполнять проверку сертификата TLS по умолчанию при использовании
          TLS, в том числе в подресурсах. Если программное обеспечение не использует
          TLS, выберите «неприменимо» (N/A).
      hardened_site:
        description: 'РЕКОМЕНДУЕТСЯ, чтобы веб-сайт проекта, репозиторий (если он
          доступен через Интернет) и сайт загрузки (если он существует отдельно) включали
          в себя укрепляющие безопасность (hardening) заголовки с ужесточёнными значениями.

'
        details: 'Обратите внимание, что GitHub отвечает этому критерию. Такие сайты
          как https://securityheaders.io/ могут быстро проверить использование. Ключевыми
          укрепляющими безопасность заголовками являются: Content Security Policy
          (CSP), HTTP Strict Transport Security (HSTS), X-Content-Type-Options (выставленный
          в «nosniff»), X-Frame-Options и X-XSS-Protection.

'
      hardening:
        description: 'РЕКОМЕНДУЕТСЯ, чтобы в ПО, создаваемом проектом, использовались
          механизмы укрепления безопасности (hardening), чтобы дефекты программного
          обеспечения с меньшей вероятностью приводили к уязвимостям в безопасности.

'
        details: 'Механизмы укрепления безопасности могут включать HTTP-заголовки,
          такие как Content Security Policy (CSP), флаги компилятора для противостояния
          атакам (например, -fstack-protector) или флаги компилятора, устраняющие
          неопределенное поведение. Для наших целей политика наименьших привилегий
          не считается механизмом укрепления безопасности (использовать наименьшие
          достаточные привилегии важно, но этому посвящён отдельный критерий).

'
    '1':
      contribution_requirements:
        description:
      dco:
        description:
        details:
      governance:
        description:
        details:
      code_of_conduct:
        description:
        details:
      roles_responsibilities:
        description:
        details:
      access_continuity:
        description:
      bus_factor:
        description:
        details:
      documentation_roadmap:
        description:
        details:
      documentation_architecture:
        description:
        details:
      documentation_security:
        description:
        details:
      documentation_quick_start:
        description:
        details:
      assurance_case:
        description:
        details:
      documentation_current:
        description:
        details:
      documentation_achievements:
        description:
        details:
      accessibility_best_practices:
        description:
        details:
      internationalization:
        description:
        details:
      sites_password_security:
        description:
        details:
      maintenance_or_update:
        description:
      report_tracker:
        description:
      vulnerability_report_credit:
        description:
      vulnerability_response_process:
        description:
        details:
      coding_standards:
        description:
        details:
      coding_standards_enforced:
        description:
        details:
      build_standard_variables:
        description:
        details:
      build_preserve_debug:
        description:
        details:
      build_non_recursive:
        description:
        details:
      build_repeatable:
        description:
        details:
      installation_common:
        description:
        details:
      installation_standard_variables:
        description:
      installation_development_quick:
        description:
        details:
      external_dependencies:
        description:
        details:
      dependency_monitoring:
        description:
        details:
      updateable_reused_components:
        description:
        details:
      interfaces_current:
        description:
      automated_integration_testing:
        description:
        details:
      regression_tests_added50:
        description:
      test_statement_coverage80:
        description:
        details:
      test_policy_mandated:
        description:
      tests_documented_added:
        description:
      warnings_strict:
        description:
      implement_secure_design:
        description:
        details:
      crypto_weaknesses:
        description:
      crypto_algorithm_agility:
        description:
      crypto_credential_agility:
        description:
      crypto_used_network:
        description:
      crypto_tls12:
        description:
      crypto_certificate_verification:
        description:
        details:
      crypto_verification_private:
        description:
      signed_releases:
        description:
        details:
      version_tags_signed:
        description:
      input_validation:
        description:
        details:
      hardening:
        description:
        details:
      static_analysis_common_vulnerabilities:
        description:
      dynamic_analysis_unsafe:
        description:
    '2':
      bus_factor:
        description:
      contributors_unassociated:
        description:
        details:
      copyright_per_file:
        description:
        details:
      license_per_file:
        description:
        details:
      repo_distributed:
        description:
      small_tasks:
        description:
        details:
      require_2FA:
        description:
      secure_2FA:
        description:
        details:
      code_review_standards:
        description:
        details:
      two_person_review:
        description:
      build_reproducible:
        description:
        details:
      test_invocation:
        description:
      test_continuous_integration:
        description:
        details:
      test_statement_coverage90:
        description:
      test_branch_coverage80:
        description:
      crypto_used_network:
        description:
      crypto_tls12:
        description:
      hardened_site:
        description:
        details:
      security_review:
        description:
        details:
      hardening:
        description:
      dynamic_analysis:
        description:
      dynamic_analysis_enable_assertions:
        description:
  headings:
    Accessibility and internationalization:
    Analysis:
    Automated test suite:
    Identification:
    Basic project website content:
    Basics:
    Bug-reporting process:
    Change Control:
    Coding standards:
    Documentation:
    Dynamic code analysis:
    Externally-maintained components:
    Future:
    future:
    Installation system:
    New functionality testing:
    OSS License:
    Other:
    Other security issues:
    Previous versions:
    Project oversight:
    Public version-controlled source repository:
    Publicly known vulnerabilities fixed:
    Quality:
    Release notes:
    Reporting:
    Secure development knowledge:
    Secure release:
    Secured delivery against man-in-the-middle (MITM) attacks:
    Security:
    Static code analysis:
    Unique version numbering:
    Use basic good cryptographic practices:
    Vulnerability report process:
    Warning flags:
    Working build system:
  criterion_status:
    Met:
    Unmet:
    NA:
  last_entry:
  error_messages:
    need_home_page_or_url:
    form_contains:
      one:
      other:
    comma_separated_list:
    begin_with_cpe:
    not_an_email:
    known_bad_password:
    valid_text:
    url_message:
